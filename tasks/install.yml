# 安装proxysql并初始化
- name: Ensure group "proxysql" exists
  group:
    name: proxysql
    state: present

- name: Ensure the user "proxysql" exists
  user:
    name: proxysql
    group: proxysql

- name: Create directories for proxysql
  file: path={{ item }} state=directory owner=proxysql group=proxysql
  with_items:
    - "{{ datadir }}"
    - "{{ package_dir }}"
    - "{{ eventslog_dir }}"
    - "{{ backupdir }}"

- name: Copy the installation package
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - { src: "{{ proxysql_package }}", dest: "{{ package_dir }}" }

- name: Rendering mysql_config_editor.sh
  template:
    src: mysql_config_editor.sh.j2
    dest: "{{ package_dir }}/mysql_config_editor.sh"
    owner: root
    group: root
    mode: 0774

#- name: Case sensitive password string match for logining proxysql
#  shell: "/usr/bin/expect {{ package_dir }}/mysql_config_editor.sh"

- name: Case sensitive password string match for logining proxysql
  expect:
    command: mysql_config_editor set --login-path=proxysql --host=127.0.0.1 -P 6032 --user=admin --password
    responses:
      (?i)password: "{{ admin_login_password }}"
      (?i)Continue: y
    echo: yes
  no_log: True

- name: Add the job of logrotate for proxysql
  cron:
    name: "proxysql logrotate"
    minute: "55"
    hour: "23"
    job: "/usr/sbin/logrotate -vf -s /var/lib/logrotate/logrotate.status /etc/logrotate.d/proxysql > /dev/null 2>&1 &"

- name: Install ProxySQL
  yum:
    name: "{{ package_dir }}/{{ proxysql_package }}"
    state: present

- name: Rendering scheudler file
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: proxysql
    group: proxysql
    mode: 0774
  with_items:
    - { src: 'auto_adjust_mysql_query_rules.sh.j2', dest: "{{ datadir }}/auto_adjust_mysql_query_rules.sh" }
    - { src: 'backup.sh.j2', dest: "{{ datadir }}/backup.sh" }
#    - { src: 'send_error_log.sh.j2', dest: "{{ datadir }}/send_error_log.sh" }

- name: Add the job of sending error log for proxysql
  cron:
    name: "proxysql send log in the morning"
    minute: "55"
    hour: "08"
    job: "{{ datadir }}/send_error_log.sh > /dev/null 2>&1 &"

- name: Add the job of sending error log for proxysql
  cron:
    name: "proxysql send log in the afternoon"
    minute: "55"
    hour: "16"
    job: "{{ datadir }}/send_error_log.sh > /dev/null 2>&1 &"

- name: Rendering proxysql profile
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: proxysql
    group: proxysql
  with_items:
    - { src: 'proxysql.cnf.j2', dest: '/etc/proxysql.cnf' }

- name: Rendering logrotate file
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
  with_items:
    - { src: 'proxysql', dest: '/etc/logrotate.d/proxysql' }

- name: Modify proxysql.service file
  lineinfile:
    dest: /etc/systemd/system/proxysql.service
    regexp: "PIDFile=/var/lib/proxysql/proxysql.pid"
    line: "PIDFile={{ datadir }}/proxysql.pid"

- name: Daemon reload proxysql server
  systemd:
    daemon_reload: yes    

- name: Enable proxysql server
  systemd:
    name: proxysql
    enabled: yes

- name: Start proxysql
  systemd:
    name: proxysql
    state: started

- name: Wait for ProxySQL is running
  pause: seconds=3

- name: Modify admin password and cluster password
  proxysql_global_variables:
    login_user: 'admin'
    login_password: 'admin'
    variable: "{{ item.variable }}"
    value: "{{ item.value }}"
    load_to_runtime: True
    save_to_disk: True
  with_items:
    - { variable: 'admin-admin_credentials', value: "admin:{{ admin_login_password }};repl:{{ mysql_monitor_password }}" }
    
- name: Modify mysql-monitor password
  proxysql_global_variables:
    login_user: 'admin'
    login_password: "{{ admin_login_password }}"
    variable: "{{ item.variable }}"
    value: "{{ item.value }}"
    load_to_runtime: True
    save_to_disk: True
  with_items:
    - { variable: 'mysql-monitor_password', value: "{{ mysql_monitor_password }}" }
    - { variable: 'admin-cluster_password', value: "{{ mysql_monitor_password }}" }

- name: Add mysql_users
  proxysql_mysql_users:
    login_user: 'admin'
    login_password: "{{ admin_login_password }}"
    username: "{{ item.username }}"
    password: "{{ item.password }}"
    default_hostgroup: 10
    transaction_persistent: yes
    max_connections: 10000
    state: present
    load_to_runtime: yes
    save_to_disk: yes
  with_items:
    - { username: 'root', password: "{{ root_password }}" }
    - { username: "{{ business_user }}", password: "{{ business_password }}" }
    - { username: 'audit', password: "{{ mysql_monitor_password }}" }

- name: Add mysql_users(read_only)
  proxysql_mysql_users:
    login_user: 'admin'
    login_password: "{{ admin_login_password }}"
    username: "{{ item.username }}"
    password: "{{ item.password }}"
    default_hostgroup: 100
    transaction_persistent: yes
    max_connections: 10000
    state: present
    load_to_runtime: yes
    save_to_disk: yes
  with_items:
    - { username: 'global', password: "{{ read_only_password }}" }

- name: Encrypt mysql_users
  proxysql_manage_config:
    login_user: 'admin'
    login_password: "{{ admin_login_password }}"
    action: "SAVE"
    config_settings: "MYSQL USERS"
    direction: "FROM"
    config_layer: "RUNTIME"
  tags: manage_user

- name: Delete the reader hostgroup id of primary host
  proxysql_backend_servers:
    login_user: 'admin'
    login_password: "{{ admin_login_password }}"
    hostname: "{{ primary_host }}"
    hostgroup_id: "{{ reader_hostgroup }}"
    max_connections: "{{ max_connections }}"
    compression: 1
    port: "{{ mysql_port }}"
    state: absent
    load_to_runtime: True
    save_to_disk: True  

- name: Add the writer hostgroup id of primary host
  proxysql_backend_servers:
    login_user: 'admin'
    login_password: "{{ admin_login_password }}"
    hostname: "{{ primary_host }}"
    hostgroup_id: "{{ writer_hostgroup }}"
    max_connections: "{{ max_connections }}"
    compression: 1
    port: "{{ mysql_port }}"
    state: present
    load_to_runtime: True
    save_to_disk: True  

# - name: Add proxysql scheduler for auto adjust query rules
#   proxysql_scheduler:
#     login_user: 'admin'
#     login_password: "{{ admin_login_password }}"
#     active: 1
#     interval_ms: 3000
#     filename: "{{ datadir }}/auto_adjust_mysql_query_rules.sh"
#     state: present
#     load_to_runtime: True
#     save_to_disk: True

# - name: Add proxysql scheduler for backup
#   proxysql_scheduler:
#     login_user: 'admin'
#     login_password: "{{ admin_login_password }}"
#     active: 1
#     interval_ms: 28800000
#     filename: "{{ datadir }}/backup.sh"
#     state: present
#     load_to_runtime: True
#     save_to_disk: True