#!/bin/bash

#Author DBA R

source /etc/profile

export MYSQL_PWD="{{ admin_login_password }}"

backupdir={{ backupdir }}

hostname={{ ansible_hostname }}

delete_time=`date  "+%Y%m%d" -d "-29 days"`

eventslog_dir={{ eventslog_dir }}

## 发送消息方法
function SendMessage()

{

dingding_url="https://{{ dingding_url }}"

#向钉钉发送消息方法
function SendMessageToDingding()
{ 
curl "${dingding_url}" -H 'Content-Type: application/json' -d "
 { \"msgtype\":\"text\",
\"text\":{
\"content\":\"${1}\"},
\"at\":{
\"atMobiles\":[\"15668661298\"],
\"isAtAll\":false} }"
}

weixin_url="https://{{ weixin_url }}"

#向微信发送消息方法
function SendMessageToWeixin()
{
cat > sendweb.sh<< EOF
    curl "${weixin_url}" \
   -H 'Content-Type: application/json' \
   -d '
   {
        "msgtype": "text",
        "text": {
            "content": "${1}",
            "mentioned_mobile_list":["15668661298"]
        }
   }'
EOF
sh sendweb.sh && rm -rf sendweb.sh
}

if [ ${1} == "dingding" ]

then SendMessageToDingding "${2}"

elif [ ${1} == "weixin" ]

then SendMessageToWeixin "${2}"

else echo "未设置发送消息方式"

fi

}

function backup() {

#Save query digest to disk

mysql -u admin -h 127.0.0.1 -P6032 --prompt='Admin> ' --default-auth=mysql_native_password \
-e "set admin-stats_mysql_query_digest_to_disk=1;LOAD ADMIN VARIABLES TO RUNTIME;"

sleep 7

mysql -u admin -h 127.0.0.1 -P6032 --prompt='Admin> ' --default-auth=mysql_native_password \
-e "set admin-stats_mysql_query_digest_to_disk=0;LOAD ADMIN VARIABLES TO RUNTIME;SAVE ADMIN VARIABLES TO DISK;"

mysqldump_version=`mysqldump -V|awk '{print $5}'|awk '{print substr($1,1,1)}'`

if [[ ${mysqldump_version} == 5 ]];then
    mysqldump -u admin -h 127.0.0.1 -P6032 --no-tablespaces --skip-triggers --skip-add-locks -B main > ${backupdir}/${hostname}_`date "+%Y%m%d_%H%M%S"`.sql
else
    mysqldump -u admin -h 127.0.0.1 -P6032 --skip-column-statistics --no-tablespaces --skip-triggers --skip-add-locks -B main > ${backupdir}/${hostname}_`date "+%Y%m%d_%H%M%S"`.sql
fi

if [ $? -eq 0 ];then
    echo "The Proxysql BackUp Successfully!"
else
    echo "The Proxysql BackUp Failure!"
    SendMessage "The Proxysql {{ env }}_{{ ansible_hostname }}_{{ ansible_default_ipv4.address }} BackUp Failure!"
fi

}

function compress_logs () {

ls -lt ${eventslog_dir}/events_log.*| grep ^[^d] |grep -v '.zst'| awk '{if (NR>1)print $9}' | while read filename

do

zstd -T0 -v --rm ${filename}

done

}

function purge_files_logs () {

find ${backupdir}/ -name "${hostname}_${delete_time}*" -exec rm -rf {} \;

find ${eventslog_dir}/ -mtime +30 -name "*" -exec rm -rf {} \;

}

purge_files_logs

backup

compress_logs